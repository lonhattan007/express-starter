{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample API",
    "description": "Handles a list of motorbikes for rent.",
    "version": "0.1.0"
  },
  "components": {
    "schemas": {
      "Bike": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "brand": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "displacement": {
            "type": "number",
            "format": "float"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "requestBodies": {
      "PostBikeRequestBody": {
        "description": "Information of the bike to be created",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "brand": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "displacement": {
                  "type": "number",
                  "format": "float"
                },
                "price": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "GetBikesResponse": {
        "description": "A list of bikes",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bike"
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalItems": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalPages": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetBikeByIdResponse": {
        "description": "A bike",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/components/schemas/Bike"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PutBikeByIdResponse": {
        "description": "Status of the operation",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "bikeIdParam": {
        "name": "bikeId",
        "in": "path",
        "description": "The specific ID of the motorbike.",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "brandParam": {
        "name": "brand",
        "in": "query",
        "description": "The specific motorbike brand.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "modelParam": {
        "name": "model",
        "in": "query",
        "description": "The specific motorbike model.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "minDisplacementParam": {
        "name": "minDisplacement",
        "in": "query",
        "description": "The minimum displacement volume applied to the returned motorbikes list.",
        "required": false,
        "schema": {
          "type": "number",
          "format": "float"
        }
      },
      "maxDisplacementParam": {
        "name": "maxDisplacement",
        "in": "query",
        "description": "The maximum displacement volume applied to the returned motorbikes list.",
        "required": false,
        "schema": {
          "type": "number",
          "format": "float"
        }
      },
      "minPriceParam": {
        "name": "minPrice",
        "in": "query",
        "description": "The minimum rent price applied to the returned motorbikes list.",
        "required": false,
        "schema": {
          "type": "number",
          "format": "float"
        }
      },
      "maxPriceParam": {
        "name": "maxPrice",
        "in": "query",
        "description": "The maximum rent price applied to the returned motorbikes list.",
        "required": false,
        "schema": {
          "type": "number",
          "format": "float"
        }
      },
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "The page desired from the total motorbikes list. Automatically set to 1 if not defined for better consistency.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "pageSizeParam": {
        "name": "pageSize",
        "in": "query",
        "description": "The page size desired for the returned motorbikes list. If not provided, it will be automatically set to 10.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "paths": {
    "/bikes": {
      "get": {
        "description": "Return a list of motorbikes for rent, by default use paging with the page size of 10.",
        "parameters": [
          {
            "$ref": "#/components/parameters/brandParam"
          },
          {
            "$ref": "#/components/parameters/modelParam"
          },
          {
            "$ref": "#/components/parameters/minDisplacementParam"
          },
          {
            "$ref": "#/components/parameters/maxDisplacementParam"
          },
          {
            "$ref": "#/components/parameters/minPriceParam"
          },
          {
            "$ref": "#/components/parameters/maxPriceParam"
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBikesResponse"
          },
          "404": {
            "description": "The page query parameter is larger than the total available pages."
          }
        }
      },
      "post": {
        "description": "Create a new motorbike and add it to the end of the list.",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostBikeRequestBody"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/GetBikeByIdResponse"
          }
        }
      }
    },
    "/bikes/{bikeId}": {
      "get": {
        "description": "Get the motorbike with the specific ID.",
        "responses": {
          "200": {
            "description": "Return information of the motorbike with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/GetBikeByIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "There is no motorbike that has the provided ID."
          }
        }
      },
      "put": {
        "description": "Update the motorbike with the specific ID.",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostBikeRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PutBikeByIdResponse"
          },
          "404": {
            "description": "There is no motorbike that has the provided ID."
          }
        }
      },
      "delete": {
        "description": "Delete the motorbike with the specific ID.",
        "responses": {
          "204": {
            "description": "Successfully delete the motorbike with the provided ID."
          },
          "404": {
            "description": "There is no motorbike that has the provided ID."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/bikeIdParam"
        }
      ]
    }
  }
}
